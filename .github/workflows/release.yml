name: Build and Release

on:
  push:
    branches:
      - master  # 当代码推送到 main 分支时触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 步骤 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 步骤 2: 设置 .NET SDK（如果是 ASP.NET Core 或其他 .NET 项目）
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      # 步骤 3: 恢复项目依赖
      - name: Restore dependencies
        run: dotnet restore

      # 步骤 4: 构建项目
      - name: Build project
        run: dotnet build --configuration Release --no-restore

      # 步骤 5: 发布项目（打包输出）
      - name: Publish project
        run: dotnet publish --configuration Release --no-build --output ./publish

  release:
    runs-on: ubuntu-latest
    needs: build  # 确保 release 任务在 build 任务成功后执行

    steps:
      # 步骤 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 步骤 2: 获取当前版本（Git 标签）
      - name: Get current version (Git tag)
        id: get_version
        run: |
          # 尝试获取当前标签
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$VERSION" ]; then
            VERSION="v1.0.${GITHUB_RUN_NUMBER}"  # 如果没有标签，则使用默认版本
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV  # 设置环境变量

      # 步骤 3: 创建 GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}  # 使用当前的 Git 标签作为 Release 的标签
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 步骤 4: 上传发布的文件到 GitHub Release
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: ./publish/*  # 上传发布的文件（你可以修改路径或文件类型）
