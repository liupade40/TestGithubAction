name: Build and Release

on:
  push:
    branches:
      - master  # 当代码推送到 main 分支时触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 步骤 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 步骤 2: 设置 .NET SDK（如果是 ASP.NET Core 或其他 .NET 项目）
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      # 步骤 3: 恢复项目依赖
      - name: Restore dependencies
        run: dotnet restore

      # 步骤 4: 构建项目
      - name: Build project
        run: dotnet build --configuration Release --no-restore

      # 步骤 5: 发布项目（打包输出）
      - name: Publish project
        run: dotnet publish --configuration Release --no-build --output ./publish

  release:
    runs-on: ubuntu-latest
    needs: build  # 确保 release 任务在 build 任务成功后执行

    steps:
      # 步骤 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 步骤 2: 获取当前版本（Git 标签或 Git 提交哈希）
      - name: Get current version (Git tag or commit sha)
        id: get_version
        run: |
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$VERSION" ]; then
            VERSION="commit-${GITHUB_SHA}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # 步骤 3: 创建 GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION }}  # 使用当前的 Git 标签或提交哈希作为 Release 的标签
          release_name: Release ${{ env.VERSION }}
          body: Release description here
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}  # 使用自定义的 RELEASE_TOKEN

      # 步骤 4: 上传发布的文件到 GitHub Release
      - name: List files in the publish directory
        run: ls -R ./publish  # 用于调试，确保文件存在

      - name: Upload release assets
        uses: actions/upload-release-asset@v2  # 使用 v2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/your_project.zip  # 替换为实际的文件路径
          asset_name: your_project.zip  # 替换为你想要显示的文件名
          asset_content_type: application/zip  # 根据文件类型设置正确的 content type
